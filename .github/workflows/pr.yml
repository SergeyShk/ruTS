name: build

on:
  pull_request:
    branches:
      - "*"
  push:
    tags:
      - "*"

env:
  TEST_PYPI_LOGIN: ${{ secrets.TEST_PYPI_LOGIN }}
  TEST_PYPI_PASS: ${{ secrets.TEST_PYPI_PASS }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          pip install -U pip
          pip install poetry
      - name: Install dependencies
        run: |
          poetry install
          poetry run python -m nltk.downloader punkt stopwords
      - name: Run tests
        run: |
          poetry run pytest --cov ruts --cov-fail-under 90 --cov-report xml
      - name: Send report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests
          name: ruts-${{ matrix.python-version }}
          fail_ci_if_error: true
          verbose: true
      - name: Build distribution
        if: github.event_name == 'push' && ${{ matrix.python-version }} == "3.10"
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config http-basic.testpypi $TEST_PYPI_LOGIN $TEST_PYPI_PASS
          poetry build -f sdist
          poetry build -f wheel
          poetry publish -r testpypi
